name: Terraform Validate New Template

on:
  # push:
  #   branches: [ develop ]
  #   paths:
  #     - '**.pkr.hcl'
  # pull_request:
  #   branches: [ develop ]
  #   paths:
  #     - '**.pkr.hcl'
  workflow_dispatch:

jobs:
  set_env:
    name: Set Environment vars for Terraform
    runs-on: arc-runners
    steps:
      - name: Set Environment vars
        run: |
          export TF_VAR_vm_template="TMP-Rocky9_Packer_RKE2_2025_03_24"
          echo "TF_VAR_vm_name_list=("linux-test")" >> $GITHUB_ENV
          echo "TF_VAR_vm_template=$vm_template" >> $GITHUB_ENV

  validate_and_apply:
    name: Validate Packer Templates on vSphere
    runs-on: arc-runners
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@main
        with:
          version: "latest"

      # - name: Get changed files
      #   id: changed-files
      #   uses: tj-actions/changed-files@v46.0.2
      #   with:
      #     files: |
      #       **/*.pkr.hcl

      - name: Check Terraform Format
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Checking format for $dir"
            packer fmt -check "$dir"
          done
      
      - name: Run packer init
        env:
          VAULT_ADDR: ${{ vars.VAULT_ADDR}}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Running packer init for $dir"
            packer init "$dir"
          done 

      - name: Run packer validate
        env:
          VAULT_ADDR: ${{ vars.VAULT_ADDR}}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        if: steps.changed-files.outputs.all_changed_files != ''
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Validating $dir"
            packer validate "$dir"
          done

      - name: Run packer build
        env:
          VAULT_ADDR: ${{ vars.VAULT_ADDR}}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        if: steps.changed-files.outputs.all_changed_files != ''
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            dir=$(dirname "$file")
            echo "Building $dir"
            packer build "$dir"
          done